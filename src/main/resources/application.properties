# the app takes 2 active profiles - first for testing/production environment (test/prod),
# the second defining the auth method of IdM (basic-auth, oauth, x509)
spring.profiles.active=test, jwt, basic-auth

idm.url=https://api-dev.perun-aai.org/oauth/rpc//
idm.username=test
idm.password=test
idm.extSourceName=ExtSourceInternal

idm.ssl.keystore-password=password
idm.ssl.key-password=password
idm.ssl.truststore-password=password

idp.user-info-uri=https://login.e-infra.cz/oidc/user-info

spring.security.oauth2.resourceserver.jwt.issuer-uri=https://login.e-infra.cz/oidc/
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=https://login.e-infra.cz/oidc/jwk

# uncomment this when using oauth2 client (and set correct values)
#spring.security.oauth2.client.registration.test.client-id=testId
#spring.security.oauth2.client.registration.test.client-secret=testSecret
#spring.security.oauth2.client.registration.test.authorization-grant-type=client_credentials
#spring.security.oauth2.client.registration.test.scope=read,write
#spring.security.oauth2.client.registration.test.provider=test-provider-id


# 2. Define the Provider (the Authorization Server's details)
#    This ID 'test-provider-id' must match the value used above.
#    You only need to configure the 'token-uri' for client_credentials flow.
spring.security.oauth2.client.provider.test-provider-id.token-uri=https://localhost:4200/providerUri/oauth/token

perun.einfra.ext-source=https://login.e-infra.cz/idp/

spring.application.name=RegistrarPrototype

